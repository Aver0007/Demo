PORT=5000
DATABASE_URL=postgres://postgres:Ayushi@2002@localhost:5432/url_shortener
BASE_URL=http://localhost:5173


# CREATE DATABASE url_shortener;
# \c url_shortener;

# CREATE TABLE urls (
#   id SERIAL PRIMARY KEY,
#   short_id VARCHAR(10) UNIQUE NOT NULL,
#   long_url TEXT NOT NULL,
#   created_at TIMESTAMPTZ DEFAULT NOW()
# );


# ---

# 1.4. Create index.js

# const express = require("express");
# const cors = require("cors");
# const { Pool } = require("pg");
# require("dotenv").config();

# const app = express();
# const pool = new Pool({ connectionString: process.env.DATABASE_URL });

# app.use(cors({ origin: process.env.BASE_URL }));
# app.use(express.json());

# // Generate simple short ID
# function generateShortId() {
#   return Math.random().toString(36).substring(2, 8); // 6-character ID
# }

# // Create short URL
# app.post("/api/shorten", async (req, res) => {
#   const { longUrl } = req.body;
#   if (!longUrl) return res.status(400).json({ error: "URL required" });

#   const shortId = generateShortId();

#   try {
#     await pool.query(
#       "INSERT INTO urls (short_id, long_url) VALUES ($1, $2)",
#       [shortId, longUrl]
#     );
#     res.json({ shortUrl: `${process.env.BASE_URL}/${shortId}` });
#   } catch (err) {
#     console.error(err);
#     res.status(500).send("Database error");
#   }
# });

# // Redirect short ID
# app.get("/:shortId", async (req, res) => {
#   const { shortId } = req.params;
#   try {
#     const result = await pool.query(
#       "SELECT long_url FROM urls WHERE short_id = $1",
#       [shortId]
#     );
#     if (result.rows.length > 0) {
#       res.redirect(result.rows[0].long_url);
#     } else {
#       res.status(404).send("URL not found");
#     }
#   } catch (err) {
#     res.status(500).send("Error");
#   }
# });

# app.listen(process.env.PORT, () =>
#   console.log(`Server running at http://localhost:${process.env.PORT}`)
# );


# ---

# ðŸŽ¨ Step 2: Frontend (React + TailwindCSS)

# 2.1. Create React project

# npm create vite@latest url-shortener-frontend -- --template react
# cd url-shortener-frontend
# npm install


# ---

# 2.2. Setup TailwindCSS

# npm install -D tailwindcss postcss autoprefixer
# npx tailwindcss init -p

# tailwind.config.js

# export default {
#   content: ["./index.html", "./src/**/*.{js,jsx}"],
#   theme: { extend: {} },
#   plugins: [],
# }

# src/index.css

# @tailwind base;
# @tailwind components;
# @tailwind utilities;


# ---

# 2.3. Install Axios

# npm install axios


# ---

# 2.4. Replace App.jsx with:

# import { useState } from "react";
# import axios from "axios";

# export default function App() {
#   const [longUrl, setLongUrl] = useState("");
#   const [shortUrl, setShortUrl] = useState("");

#   const handleShorten = async (e) => {
#     e.preventDefault();
#     if (!longUrl) return;
#     try {
#       const res = await axios.post("http://localhost:5000/api/shorten", {
#         longUrl,
#       });
#       setShortUrl(res.data.shortUrl);
#     } catch (err) {
#       alert("Error shortening URL");
#     }
#   };

#   return (
#     <div className="min-h-screen flex items-center justify-center bg-gray-100">
#       <form onSubmit={handleShorten} className="bg-white p-8 rounded shadow w-full max-w-md">
#         <h1 className="text-2xl font-bold mb-4 text-center">URL Shortener</h1>
#         <input
#           type="url"
#           value={longUrl}
#           onChange={(e) => setLongUrl(e.target.value)}
#           placeholder="Enter long URL"
#           className="w-full p-2 border rounded mb-4"
#           required
#         />
#         <button className="w-full bg-blue-600 text-white py-2 rounded">
#           Shorten URL
#         </button>
#         {shortUrl && (
#           <p className="mt-4 text-center">
#             Short URL:{" "}
#             <a href={shortUrl} target="_blank" rel="noreferrer" className="text-blue-600 underline">
#               {shortUrl}
#             </a>
#           </p>
#         )}
#       </form>
#     </div>
#   );
# }


# ---

# 2.5. Start React app

# npm run dev


# ---

# ðŸ§ª Test It

# 1. Run backend:

# node index.js


# 2. Run frontend:

# npm run dev


# 3. Go to http://localhost:5173, paste a long URL, and click Shorten URL


# 4. Open the generated short link in a new tab â†’ It should redirect you




# ---

# âœ… Done!

# This is now a fully working basic full-stack app with:

# No nanoid

# No nodemon

# Simple short ID logic

# Minimal setup